@model SearchListViewModel

@{
    ViewBag.Title = "Search";
    Layout = "_BannerLayout";

    SearchRoute current = Model.CurrentRoute;
    SearchRoute routes = current.Clone();
    string active;
}

@section scripts {
    <script src="~/lib/jquery-validate/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/location.js"></script>
    <script src="~/js/misc.js"></script>
}

<div id="modal-sort-filter" class="modal fade" tabindex="-1" aria-labelledby="modal-sort-filter-title">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal-sort-filter-title" class="modal-title user-select-none text-truncate">Search Options</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form id="form-sort-filter" asp-action="SubmitSortFilter" asp-all-route-data="@routes.ToDictionary()" method="post"
                  onchange="enableElement('sort-filter-submit')" defaultbutton="sort-filter-submit">
                <div class="modal-body">
                    <div class="mb-2">
                        <h6 class="user-select-none text-truncate">Sort</h6>
                    </div>
                    <div class="row row-cols-lg-2 gx-2">
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-sort" class="form-select text-truncate" asp-for="SortFilter.SortField" asp-items="@Model.SortFields"></select>
                                <label class="form-label user-select-none" for="select-search-sort">Sort by</label>
                            </div>
                        </div>
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-pagesize" class="form-select text-truncate" asp-for="SortFilter.PageSize" asp-items="@Model.PageSizes"></select>
                                <label class="form-label user-select-none" for="select-search-pagesize">Page size</label>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex flex-column flex-sm-row gap-2 mb-3">
                        <input id="input-search-ascending" class="btn-check" asp-for="SortFilter.SortDirection" type="radio" value="@OrderDirection.AscendingAbbr"
                            checked="@Model.SortFilter.IsSortAscending" />
                        <label class="btn btn-light d-flex flex-nowrap justify-content-center gap-2" for="input-search-ascending">
                            <i class="bi bi-sort-up"></i>
                            <span class="text-truncate">@OrderDirection.Ascending</span>
                        </label>
                        <input id="input-search-descending" class="btn-check" asp-for="SortFilter.SortDirection" type="radio" value="@OrderDirection.DescendingAbbr"
                            checked="@Model.SortFilter.IsSortDescending" />
                        <label class="btn btn-light d-flex flex-nowrap justify-content-center gap-2" for="input-search-descending">
                            <i class="bi bi-sort-down"></i>
                            <span class="text-truncate">@OrderDirection.Descending</span>
                        </label>
                    </div>
                    <div class="mb-2">
                        <h6 class="user-select-none text-truncate">Filter</h6>
                    </div>
                    <div class="row row-cols-lg-2 gx-2">
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-catalog" class="form-select text-truncate" asp-for="SortFilter.Catalog" asp-items="@Model.Catalogs"></select>
                                <label class="form-label user-select-none" for="select-search-catalog">Catalog</label>
                            </div>
                        </div>
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-type" class="form-select text-truncate" asp-for="SortFilter.Type" asp-items="@Model.Types"></select>
                                <label class="form-label user-select-none" for="select-search-type">Type</label>
                            </div>
                        </div>
                    </div>
                    <div class="row row-cols-lg-2 gx-2">
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-constellation" class="form-select text-truncate" asp-for="SortFilter.Constellation" asp-items="@Model.Constellations"></select>
                                <label class="form-label user-select-none" for="select-search-constellation">Constellation</label>
                            </div>
                        </div>
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-season" class="form-select text-truncate" asp-for="SortFilter.Season" asp-items="@Model.Seasons"></select>
                                <label class="form-label user-select-none" for="select-search-season">Season</label>
                            </div>
                        </div>
                    </div>
                    <div class="row row-cols-lg-2 gx-2">
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-trajectory" class="form-select text-truncate" asp-for="SortFilter.Trajectory" asp-items="@Model.Trajectories"></select>
                                <label class="form-label user-select-none" for="select-search-trajectory">Trajectory</label>
                            </div>
                        </div>
                        <div class="col-lg">
                            <div class="form-floating mb-3">
                                <select id="select-search-visibility" class="form-select text-truncate" asp-for="SortFilter.Visibility" asp-items="@Model.Visibilities"></select>
                                <label class="form-label user-select-none" for="select-search-visibility">Visibility</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-check form-switch">
                        <input id="input-search-hasname" class="form-check-input" asp-for="SortFilter.IsFilterByHasName" type="checkbox" checked="@Model.SortFilter.IsFilterByHasName" />
                        <label class="form-label user-select-none text-truncate" for="input-search-hasname">Has name</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="sort-filter-submit" class="btn btn-primary" type="submit" disabled>Apply</button>
                    <button class="btn btn-secondary" type="submit" name="reset" value="true" formnovalidate>Reset</button>
                </div>
            </form>
        </div>
    </div>
</div>

<vc:geolocation-form route="@routes.ToDictionary() as Dictionary<string, string>" action-method="SubmitGeolocation"></vc:geolocation-form>

<div class="sticky-top-container container-sm px-1 py-2 p-sm-3 my-0 my-sm-3 my-md-5">
    <div class="d-flex flex-row gap-0 gap-sm-2 gap-md-3">
        <div class="flex-grow-1">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form id="form-search" asp-action="SubmitSearch" asp-all-route-data="@routes.ToDictionary()"
                  method="post" oninput="enableElement('form-search-submit')" defaultbutton="form-search-submit">
                <span asp-validation-for="Search.Input" class="text-danger"></span>
                <div class="d-flex flex-nowrap input-group border rounded-0">
                    <input id="input-search" class="form-control text-truncate order-1 order-md-0 border-0 rounded-0 ps-0 pe-2 ps-md-3"
                        placeholder="Search" asp-for="Search.Input" type="text" value="@Model.Search.Input" />
                    <button id="form-search-submit" class="btn btn-white text-dark border-0 rounded-0" type="submit" disabled>
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </form>
        </div>

        <vc:options-form-toggle form-id="#modal-sort-filter"></vc:options-form-toggle>

        @{
            routes.PageNumber = 1;
        }
        <vc:geolocation-form-toggle form-id="#geolocation-modal"></vc:geolocation-form-toggle>

    </div>
</div>

<div class="container pt-3">

    <div class="mb-3">
        @{
            routes = current.Clone();
            routes.PageNumber = 1;

            if (routes.HasFilters())
            {
                <p>Filters</p>

                <div class="d-flex flex-nowrap flex-md-wrap overflow-auto gap-2 pb-2">

                    @foreach (var filter in current.GetActiveFilters())
                    {
                        <a asp-action="ClearFilter" asp-all-route-data="@routes.ToDictionary()" asp-route-name="@filter.Key">
                            <div class="badge bg-secondary py-2 ps-2 pe-3 rounded-0">
                                <i class="bi bi-x me-2"></i>
                                <span>@filter.Value</span>
                            </div>
                        </a>
                    }

                    <a asp-action="ClearFilters" asp-all-route-data="@routes.ToDictionary()">
                        <div class="badge bg-secondary py-2 ps-2 pe-3 rounded-0">
                            <i class="bi bi-x me-2"></i>
                            <span>Clear all</span>
                        </div>
                    </a>
                </div>
            }
        }
    </div>

    <hr />

    <div class="mb-3">
        <p>@Model.Results</p>
    </div>

    <hr />

    <div id="start">
        @if (Model.DsoItems is not null && Model.DsoItems.Any())
        {
            int nameCount = 0;
            string offcanvasId = string.Empty;

            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
                @foreach (DsoModel dso in Model.DsoItems)
                {
                    @if (dso is not null)
                    {
                        <div class="col">
                            <div class="card h-100">
                                <div class="card-header">@dso.CompoundId</div>
                                <div class="card-body">
                                    <vc:dso-sort-tag dso="@dso" sort-field="@current.SortField"></vc:dso-sort-tag>

                                    @if (dso.HasName)
                                    {
                                        <h5 class="card-title">@dso.Name</h5>

                                        @if (dso.HasMultipleNames)
                                        {
                                            nameCount = dso.NameCount - 1;
                                            <h6 class="card-subtitle text-muted mb-2">@nameCount.OtherNames()</h6>
                                        }
                                    }
                                    else
                                    {
                                        <h5 class="card-title">No Name</h5>
                                    }

                                    <p class="card-text">
                                        @dso.CatalogName
                                        <br />
                                        @dso.Type
                                        <br />
                                        @dso.Description
                                    </p>
                                </div>

                                <div class="card-footer d-flex justify-content-between align-items-center">
                                    @{
                                        offcanvasId = $"details-offcanvas-{dso.CompoundId}";
                                    }
                                    <a class="card-link link-primary text-decoration-underline" data-bs-toggle="offcanvas" href="#@offcanvasId" role="button">Details</a>

                                    <div id="@offcanvasId" class="offcanvas offcanvas-end" tabindex="-1" aria-labelledby="details-title">
                                        <vc:dso-details dso="@dso"></vc:dso-details>
                                    </div>

                                    <a class="btn btn-primary" asp-controller="Track" asp-action="Summary" asp-route-catalog="@dso.CatalogName"
                                       asp-route-id="@dso.Id" asp-route-algorithm="@AlgorithmName.Default">Track</a>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        }
        else
        {
            <div>
                <p>Nothing found. Try to broaden your search filters to include more results.</p>
            </div>
        }
    </div>

    <hr />

    <div>
        @{
            routes = current.Clone();

            <nav>
                <ul class="pagination justify-content-center d-flex d-sm-none">
                    @if (current.PageNumber > 1)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber - 1;
                            }
                            <a class="page-link px-4" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link px-4"><i class="bi bi-chevron-left"></i></span>
                        </li>
                    }
                    @if (current.PageNumber < Model.TotalPages)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber + 1;
                            }
                            <a class="page-link px-4" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link px-4"><i class="bi bi-chevron-right"></i></span>
                        </li>
                    }
                </ul>

                <ul class="pagination justify-content-center d-none d-sm-flex">
                    @if (current.PageNumber > 1)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber - 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link"><i class="bi bi-chevron-left"></i></span>
                        </li>
                    }

                    @if (Model.TotalPages <= 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">1</span>
                        </li>
                    }
                    else if (Model.TotalPages <= 6)
                    {
                        for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }
                    }
                    else if (Model.TotalPages > 6 && current.PageNumber <= 4)
                    {
                        for (int i = 1; i <= 5; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }

                        <li class="page-item">
                            @{
                                routes.PageNumber = 6;
                            }
                            <a class="page-link align-bottom" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = Model.TotalPages;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                @Model.TotalPages
                            </a>
                        </li>
                    }
                    else if (Model.TotalPages > 8 && current.PageNumber > 4 && current.PageNumber <= Model.TotalPages - 4)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">1</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber - 2;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        for (int i = current.PageNumber - 1; i <= current.PageNumber + 1; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }

                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber + 2;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = Model.TotalPages;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                @Model.TotalPages
                            </a>
                        </li>
                    }
                    else if (Model.TotalPages > 6 && current.PageNumber > Model.TotalPages - 4 && current.PageNumber <= Model.TotalPages)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">1</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = Model.TotalPages - 5;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        for (int i = Model.TotalPages - 4; i <= Model.TotalPages; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }
                    }

                    @if (current.PageNumber < Model.TotalPages)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber + 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link"><i class="bi bi-chevron-right"></i></span>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>