@model SearchListViewModel

@{
    ViewBag.Title = "Search";
    Layout = "_BannerLayout";

    SearchRoute current = Model.CurrentRoute;
    SearchRoute routes = current.Clone();
    string active;
}

@section scripts {
    <script src="~/lib/jquery-validate/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/location.js"></script>
    <script src="~/js/misc.js"></script>
}

<div id="search-container" class="container pt-3">

    <div class="mb-3">
        @{
            routes.PageNumber = 1;
        }
        <vc:geolocation-form route="@routes.ToDictionary() as Dictionary<string, string>" action-method="SubmitGeolocation"></vc:geolocation-form>
    </div>

    <div>
        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;

                if (routes.HasFilters())
                {
                    <div class="d-flex flex-wrap gap-2">
                        
                        @foreach (var filter in current.GetActiveFilters())
                        {
                            <a asp-action="ClearFilter" asp-all-route-data="@routes.ToDictionary()" asp-route-name="@filter.Key">
                                <span class="badge bg-secondary"><i class="bi bi-x"></i>&nbsp;@filter.Value</span>
                            </a>
                        }

                        <a asp-action="ClearFilters" asp-all-route-data="@routes.ToDictionary()">
                            <span class="badge bg-secondary"><i class="bi bi-x"></i>&nbsp;Clear all</span>
                        </a>
                    </div>
                }
            }
        </div>

        <hr />

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form id="form-search" asp-action="SubmitSearch" asp-all-route-data="@routes.ToDictionary()" method="post" oninput="enableElement('form-search-submit')">
                <div class="input-group mb-3">
                    <input id="input-search" class="form-control" placeholder="Search" asp-for="Search.Input" type="text" value="@Model.Search.Input" />
                    <button id="form-search-submit" class="btn btn-primary" type="submit" disabled>
                        <i class="bi bi-search"></i>
                    </button>
                </div>
                <span asp-validation-for="Search.Input" class="text-danger"></span>
            </form>
        </div>

        <hr />

        <div class="mb-3">
            @{
                routes = current.Clone();
            }
            <form asp-action="SubmitSortField" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-floating">
                    <select name="sort" id="select-search-sort" class="form-select" onchange="this.form.submit();" asp-items="@Model.SortFields"></select>
                    <label class="form-label user-select-none" for="select-search-sort">Sort by</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();

                routes.SortAscending();
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()">@OrderDirection.Ascending</a>

                routes.SortDescending();
                <a asp-action="List" asp-all-route-data="@routes.ToDictionary()">@OrderDirection.Descending</a>
            }
        </div>

        <hr />

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitCatalogFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-floating">
                    <select name="catalog" id="select-search-catalog" class="form-select" onchange="this.form.submit();" asp-items="@Model.Catalogs"></select>
                    <label class="form-label user-select-none" for="select-search-catalog">Catalog</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitTypeFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-floating">
                    <select name="type" id="select-search-type" class="form-select" onchange="this.form.submit();" asp-items="@Model.Types"></select>
                    <label class="form-label user-select-none" for="select-search-type">Type</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitConstellationFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-floating">
                    <select name="constellation" id="select-search-constellation" class="form-select" onchange="this.form.submit();" asp-items="@Model.Constellations"></select>
                    <label class="form-label user-select-none" for="select-search-constellation">Constellation</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitSeasonFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-floating">
                    <select name="season" id="select-search-season" class="form-select" onchange="this.form.submit();" asp-items="@Model.Seasons"></select>
                    <label class="form-label user-select-none" for="select-search-season">Season</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitTrajectoryFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-floating">
                    <select name="trajectory" id="select-search-trajectory" class="form-select" onchange="this.form.submit();" asp-items="@Model.Trajectories"></select>
                    <label class="form-label user-select-none" for="select-search-trajectory">Trajectory</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitLocalFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-check form-switch">
                    <input id="input-search-local" class="form-check-input" type="checkbox" checked="@current.IsFilterByLocal" onchange="this.form.submit();" />
                    <label class="form-label" for="input-search-local">Local</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitVisibleFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-check form-switch">
                    <input id="input-search-visible" class="form-check-input" type="checkbox" checked="@current.IsFilterByVisible" onchange="this.form.submit();" />
                    <label class="form-label" for="input-search-visible">Visible</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitRisingFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-check form-switch">
                    <input id="input-search-rising" class="form-check-input" type="checkbox" checked="@current.IsFilterByRising" onchange="this.form.submit();" />
                    <label class="form-label" for="input-search-rising">Rising</label>
                </div>
            </form>
        </div>

        <div class="mb-3">
            @{
                routes = current.Clone();
                routes.PageNumber = 1;
            }
            <form asp-action="SubmitHasNameFilter" asp-all-route-data="@routes.ToDictionary()" method="post">
                <div class="form-check form-switch">
                    <input id="input-search-hasname" class="form-check-input" type="checkbox" checked="@current.IsFilterByHasName" onchange="this.form.submit();" />
                    <label class="form-label" for="input-search-hasname">Has name</label>
                </div>
            </form>
        </div>
    </div>

    <hr />

    <div class="mb-3">
        @{
            routes = current.Clone();
        }
        <form asp-action="SubmitPageSize" asp-all-route-data="@routes.ToDictionary()" method="post">
            <select name="size" class="form-select" onchange="this.form.submit();" asp-items="@Model.PageSizes"></select>
        </form>
    </div>

    <div class="mb-3">
        <p>@Model.Results</p>
    </div>

    <hr />

    <div id="start">
        @if (Model.DsoItems is not null && Model.DsoItems.Any())
        {
            int nameCount = 0;
            string offcanvasId = string.Empty;

            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
                @foreach (DsoModel dso in Model.DsoItems)
                {
                    @if (dso is not null)
                    {
                        <div class="col">
                            <div class="card h-100">
                                <div class="card-header">@dso.CompoundId</div>
                                <div class="card-body">
                                    <vc:dso-sort-tag dso="@dso" sort-field="@current.SortField"></vc:dso-sort-tag>

                                    @if (dso.HasName)
                                    {
                                        <h5 class="card-title">@dso.Name</h5>

                                        @if (dso.HasMultipleNames)
                                        {
                                            nameCount = dso.NameCount - 1;
                                            <h6 class="card-subtitle text-muted mb-2">@nameCount.OtherNames()</h6>
                                        }
                                    }
                                    else
                                    {
                                        <h5 class="card-title">No Name</h5>
                                    }

                                    <p class="card-text">
                                        @dso.CatalogName
                                        <br />
                                        @dso.Type
                                        <br />
                                        @dso.Description
                                    </p>
                                </div>

                                <div class="card-footer d-flex justify-content-between align-items-center">
                                    @{
                                        offcanvasId = $"details-offcanvas-{dso.CompoundId}";
                                    }
                                    <a class="card-link link-primary text-decoration-underline" data-bs-toggle="offcanvas" href="#@offcanvasId" role="button">Details</a>

                                    <div id="@offcanvasId" class="offcanvas offcanvas-end" tabindex="-1" aria-labelledby="details-title">
                                        <vc:dso-details dso="@dso"></vc:dso-details>
                                    </div>

                                    <a class="btn btn-primary" asp-controller="Track" asp-action="Summary" asp-route-catalog="@dso.CatalogName"
                                       asp-route-id="@dso.Id" asp-route-algorithm="@AlgorithmName.Default">Track</a>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        }
        else
        {
            <div>
                <p>Nothing found. Try to broaden your search filters to include more results.</p>
            </div>
        }
    </div>

    <hr />

    <div>
        @{
            routes = current.Clone();

            <nav>
                <ul class="pagination justify-content-center d-flex d-sm-none">
                    @if (current.PageNumber > 1)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber - 1;
                            }
                            <a class="page-link px-4" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link px-4"><i class="bi bi-chevron-left"></i></span>
                        </li>
                    }
                    @if (current.PageNumber < Model.TotalPages)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber + 1;
                            }
                            <a class="page-link px-4" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link px-4"><i class="bi bi-chevron-right"></i></span>
                        </li>
                    }
                </ul>

                <ul class="pagination justify-content-center d-none d-sm-flex">
                    @if (current.PageNumber > 1)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber - 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link"><i class="bi bi-chevron-left"></i></span>
                        </li>
                    }

                    @if (Model.TotalPages <= 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">1</span>
                        </li>
                    }
                    else if (Model.TotalPages <= 6)
                    {
                        for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }
                    }
                    else if (Model.TotalPages > 6 && current.PageNumber <= 4)
                    {
                        for (int i = 1; i <= 5; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }

                        <li class="page-item">
                            @{
                                routes.PageNumber = 6;
                            }
                            <a class="page-link align-bottom" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = Model.TotalPages;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                @Model.TotalPages
                            </a>
                        </li>
                    }
                    else if (Model.TotalPages > 8 && current.PageNumber > 4 && current.PageNumber <= Model.TotalPages - 4)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">1</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber - 2;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        for (int i = current.PageNumber - 1; i <= current.PageNumber + 1; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }

                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber + 2;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = Model.TotalPages;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                @Model.TotalPages
                            </a>
                        </li>
                    }
                    else if (Model.TotalPages > 6 && current.PageNumber > Model.TotalPages - 4 && current.PageNumber <= Model.TotalPages)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">1</a>
                        </li>

                        <li class="page-item">
                            @{
                                routes.PageNumber = Model.TotalPages - 5;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">&hellip;</a>
                        </li>

                        for (int i = Model.TotalPages - 4; i <= Model.TotalPages; i++)
                        {
                            active = current.PageNumber.Active(i);
                            <li class="page-item @active">
                                @{
                                    routes.PageNumber = i;
                                }
                                <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">@i</a>
                            </li>
                        }
                    }

                    @if (current.PageNumber < Model.TotalPages)
                    {
                        <li class="page-item">
                            @{
                                routes.PageNumber = current.PageNumber + 1;
                            }
                            <a class="page-link" asp-action="List" asp-all-route-data="@routes.ToDictionary()" asp-fragment="start">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link"><i class="bi bi-chevron-right"></i></span>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>