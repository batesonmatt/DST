@model TrackPhaseViewModel

@{
    ViewBag.Title = "Phase";
    Layout = "_BannerLayout";

    TrackPhaseRoute current = Model.CurrentRoute;
    TrackPhaseRoute routes = current.Clone();
}

<div class="container pt-3">

    <div class="mb-3">
        <vc:geolocation-form route="routes.ToDictionary() as Dictionary<string, string>" action-method="SubmitPhaseGeolocation"></vc:geolocation-form>
    </div>

    @* Consider view component or partial view *@
    <div class="mb-5">
        @if (Model.Dso.HasName)
        {
            <h1>@Model.Dso.CompoundId - @Model.Dso.Name</h1>
        }
        else
        {
            <h1>@Model.Dso.CompoundId</h1>
        }

        @if (Model.Dso.HasMultipleNames)
        {
            <p>
                <i>Other names:&nbsp;&nbsp;@string.Join(", ", Model.Dso.GetOtherNames())</i>
            </p>
        }
    </div>

    <nav class="nav nav-tabs mb-5">
        <a class="nav-item nav-link" asp-controller="Track" asp-action="Summary" asp-all-route-data="@routes.GetSummaryRoute().ToDictionary()">Summary</a>
        <a class="nav-item nav-link active">Phase</a>
        @* <a class="nav-item nav-link" asp-controller="Track" asp-action="Period" asp-all-route-data="@routes.ToDictionary()">Period</a> *@
    </nav>

    <form id="form-phase" class="mb-5" asp-action="SubmitPhase" asp-all-route-data="@routes.ToDictionary()" method="post">
        <div class="mb-3">
            <label class="form-label" asp-for="PhaseModel.Algorithm">Timekeeping Algorithm</label>
            <select id="select-phase-algorithm" class="form-control" asp-for="PhaseModel.Algorithm" asp-items="@(new SelectList(Model.Algorithms, "Id", "Text", Model.PhaseModel.Algorithm))"></select>
        </div>
        <div class="mb-3">
            <label class="form-label" asp-for="PhaseModel.Phase">Phase</label>
            <select id="select-phase" class="form-control" asp-for="PhaseModel.Phase" asp-items="@(new SelectList(Model.Phases, "Id", "Text", Model.PhaseModel.Phase))"></select>
        </div>
        <div class="mb-3">
            <label class="form-label" asp-for="PhaseModel.Start">Start</label>
            <input id="input-phase-start" class="form-control" asp-for="PhaseModel.Start" type="datetime-local" value="@Model.PhaseModel.GetFormattedStart()" />
            <span asp-validation-for="PhaseModel.Start" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label class="form-label" asp-for="PhaseModel.Cycles">Cycles</label>
            <input id="input-phase-cycles" class="form-control" asp-for="PhaseModel.Cycles" type="number" value="@Model.PhaseModel.Cycles" />
            <span asp-validation-for="PhaseModel.Cycles" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <button id="form-phase-submit" class="btn btn-primary" type="submit">Track</button>
        </div>
    </form>

    <div class="mb-3">
        @if (Model.Results is not null && Model.Results.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped caption-top align-middle">
                    <caption>Track results</caption>
                    <thead>
                        <tr>
                            <th scope="col"></th>
                            <th scope="col">Date/Time</th>
                            <th scope="col">Position</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int resultNumber = 1;
                            foreach (var result in Model.Results)
                            {
                                if (result is not null)
                                {
                                    <tr>
                                        <th scope="row">@resultNumber</th>
                                        <td>@result.DateTime.ToLocalTime().ToString()</td>
                                        <td>@result.Coordinate.Format(DST.Core.Coordinate.FormatType.Component)</td>
                                    </tr>
                                }
                                resultNumber++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>