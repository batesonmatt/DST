@model TrackPeriodViewModel

@{
    ViewBag.Title = "Phase";
    Layout = "_BannerLayout";

    TrackPeriodRoute current = Model.CurrentRoute;
    TrackPeriodRoute routes = current.Clone();
}

@section scripts {
    <script src="~/lib/jquery-validate/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/location.js"></script>
    <script src="~/js/misc.js"></script>
    <script src="~/js/period-toggle.js"></script>
}

<style>
    input[type=checkbox][disabled] + label {
        color: #ccc;
    }
</style>

<div class="container pt-3">

    <div class="mb-3">
        <vc:geolocation-form route="routes.ToDictionary() as Dictionary<string, string>" action-method="SubmitPeriodGeolocation"></vc:geolocation-form>
    </div>

    <partial name="_DsoNameHeadingPartial" model="@Model.Dso" />

    <nav class="nav nav-tabs mb-5">
        <a class="nav-item nav-link" asp-controller="Track" asp-action="Summary" asp-all-route-data="@routes.GetSummaryRoute().ToDictionary()">Summary</a>
        <a class="nav-item nav-link" asp-controller="Track" asp-action="Phase" asp-all-route-data="@routes.GetSummaryRoute().ToDictionary()">Phase</a>
        <a class="nav-item nav-link active">Period</a>
    </nav>

    @if (Model.HasWarning())
    {
        <div class="mb-3">
            <label class="form-label text-warning">@Model.WarningMessage</label>
        </div>
    }

    <div class="mb-3">
        <form id="form-period" class="mb-5" asp-action="SubmitPeriod" asp-all-route-data="@routes.ToDictionary()" method="post">
            <div class="mb-3">
                <label class="form-label" asp-for="TrackForm.Algorithm">Timekeeping Algorithm</label>
                <select id="select-period-algorithm" class="form-control" asp-for="TrackForm.Algorithm" asp-items="@(new SelectList(Model.Algorithms, "Id", "Text", Model.TrackForm.Algorithm))"></select>
            </div>
            <div class="mb-3">
                <label class="form-label" asp-for="TrackForm.Start">Start</label>
                <input id="input-period-start" class="form-control" asp-for="TrackForm.Start" type="datetime-local" value="@Model.TrackForm.GetFormattedStart()" />
                <span asp-validation-for="TrackForm.Start" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <div class="form-check form-switch">
                    <input id="input-period-single" class="form-check-input" data-bs-toggle="collapse" href="#period-collapse" role="button"
                           asp-for="TrackForm.IsTrackOnce" type="checkbox" checked="@Model.TrackForm.IsTrackOnce" onchange="periodTrackOnce()" />
                    <label class="form-label" asp-for="TrackForm.IsTrackOnce">Track Once</label>
                </div>
            </div>
            <div id="period-collapse" class="collapse @current.TrackOnce.Show()">
                <div class="mb-3">
                    <label class="form-label" asp-for="TrackForm.TimeUnit">Time Unit</label>
                    <select id="select-period-timeunit" class="form-control" asp-for="TrackForm.TimeUnit"
                            asp-items="@(new SelectList(Model.TimeUnits, "Id", "Text", Model.TrackForm.TimeUnit))"
                            onchange="updateFixedTrackingToggle(); updateAggregateToggle()"></select>
                </div>
                <div class="mb-3">
                    <label class="form-label" asp-for="TrackForm.Period">Period</label>
                    <input id="input-period" class="form-control" asp-for="TrackForm.Period" type="number" value="@Model.TrackForm.Period"
                           disabled="@Model.TrackForm.IsTrackOnce" />
                    <span asp-validation-for="TrackForm.Period" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label" asp-for="TrackForm.Interval">Interval</label>
                    <input id="input-interval" class="form-control" asp-for="TrackForm.Interval" type="number" value="@Model.TrackForm.Interval"
                           disabled="@Model.TrackForm.IsTrackOnce" />
                    <span asp-validation-for="TrackForm.Interval" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <div class="form-check form-switch">
                        <input id="input-period-fixed" class="form-check-input" asp-for="TrackForm.IsFixed" type="checkbox" checked="@Model.TrackForm.IsFixed"
                               disabled="@(current?.SupportsFixedTracking() == false)" onchange="updateAggregateToggle()" />
                        <label class="form-label" asp-for="TrackForm.IsFixed">Fixed Tracking</label>
                    </div>
                    <div id="input-fixed-warning" class="form-text" hidden="@(current?.SupportsFixedTracking())">
                        Fixed tracking is only supported for days, weeks, months, and years.
                    </div>
                </div>
                <div class="mb-3">
                    <div class="form-check form-switch">
                        <input id="input-period-aggregate" class="form-check-input" asp-for="TrackForm.IsAggregated" type="checkbox" checked="@Model.TrackForm.IsAggregated"
                               disabled="@(current?.SupportsAggregatedIntervals() == false)" />
                        <label class="form-label" asp-for="TrackForm.IsAggregated">Aggregated Intervals</label>
                    </div>
                    <div id="input-aggregate-warning" class="form-text" hidden="@(current?.SupportsAggregatedIntervals())">
                        Aggregation can only be disabled for fixed tracking in months and years.
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <button id="form-period-submit" class="btn btn-primary" type="submit">Track</button>
            </div>
        </form>
    </div>

    @if (Model.HasResults())
    {
        <div class="mb-3">
            <div class="table-responsive">
                <table class="table table-striped caption-top align-middle d-none d-sm-table">
                    <caption>Track results</caption>
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col" class="text-nowrap">Date/Time</th>
                            <th scope="col" class="text-nowrap">Altitude</th>
                            <th scope="col" class="text-nowrap">Azimuth</th>
                            <th scope="col" class="text-nowrap">Visibility</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int resultNumber = 1;
                            foreach (var result in Model.Results)
                            {
                                if (result is not null)
                                {
                                    <tr>
                                        <th scope="row">@resultNumber</th>
                                        <td class="text-nowrap">@result.GetLocalDateTimeText()</td>
                                        <td class="text-nowrap">@result.GetAltitudeText()</td>
                                        <td class="text-nowrap">@result.GetAzimuthText()</td>
                                        <td class="text-nowrap">
                                            <i class="bi @result.Vector.Visibility()"></i>
                                        </td>
                                    </tr>
                                }
                                resultNumber++;
                            }
                        }
                    </tbody>
                </table>

                <table class="table table-striped caption-top align-middle d-table d-sm-none">
                    <caption>Track results</caption>
                    <tbody>
                        @{
                            foreach (var result in Model.Results)
                            {
                                if (result is not null)
                                {
                                    <tr>
                                        <td class="py-3">
                                            <div class="d-flex justify-content-between mx-3">
                                                <div>
                                                    <small class="fst-italic">Time</small>
                                                    <h6 class="mb-2">@result.GetLocalDateTimeText()</h6>
                                                    <small class="fst-italic">Position</small>
                                                    <p class="mb-0">@result.GetCoordinateText()</p>
                                                </div>
                                                <i class="bi @result.Vector.Visibility()"></i>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

</div>
