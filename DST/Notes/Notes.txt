To Do:
___________________________________________________________________________
```````````````````````````````````````````````````````````````````````````

Icons
- https://icons.getbootstrap.com/

---------------------------------------------------------------------------

Search list
- Add images to cards
- Use thumbnails
- Consider image in card background, and dark caption overlay with white text and text-shadow.
- Sort tags should appear in the card footer/header
- No track button is necessary, unless on hover
- Consider Layout:
  ----------------------------
  |                Sort tag...
  |
  |
  |
  |
  |
  |__________________________
  | ID
  | Name
  | Description
  ----------------------------


Images
- Credit the image on Period and Phase views.
  Consider also adding the credit line to the carousel images.
  <a href="ImageSource">Author</a>, <a href="LicenseSource">License</a>, via Provider
- Consider feature to hide/show images for search page (show images toggle switch)

---------------------------------------------------------------------------

REDESIGN VIEWS

CSS
- Add global style variables for colors, etc.

List

Summary

Phase

Period

Shared
- Move any duplicate markup into layout views.
  Anything that doesn't need to be a partial view (doesn't require arguments).
  See "Back to search" markup in the Track views.

Home
.carousel-control-prev,
  .carousel-control-next{
    text-shadow: 2px 2px 4px #000000;
    font-size: 30px;
  }
- Consider Track button on hover of carousel image
- Dark opacity for carousel caption, and side buttons on hover (gradient?)
- Include short summary
- Be concise!
- Special note: "Happy tracking!"

About
- Revise info.
- Be concise!
- Consider left/right aligning block sections with gradient backgrounds.
- Consider image/snippet examples.

Navbar
- Consider redesigning styles for navbar-toggler and navbar-dark. (_HeaderFooterLayout)
- Consider gradient animation on hover

Footer

Text Interactions (Text selection)
- https://getbootstrap.com/docs/5.0/utilities/interactions/

Tooltips (Do not use the Tooltip nor Popover components, which rely on the Popper library)
- Consider hover over hint icon (?) at the end of the text, and use the Title attribute for the hover tooltip.
- Consider Collapse control for tooltips
- Use .form-text for tooltips
  Consider pt-1 and mt-0 on the form-text
  OR, consider pb-1 and mb-0 on the control.
- Period => Use the comments from TrackPeriodModel regarding aggregated intervals

Site icon (Displays in browser tab)
- See wwwroot.favicon.ico (default)
- Replace with custom .ico file

Use Bootstrap class .text-truncate where necessary (adds an ellipsis at the end of text)
Use Bootstrap class .user-select-none where necessary (prevents text selection)

Add Title="" attribute to various text elements that may be truncated.

Consider class="display-#" for certain headings (like the banners)

---------------------------------------------------------------------------

Update .NET SDK

---------------------------------------------------------------------------

Exception handling and reporting

Enable error reporting via GoDaddy email
- Add code to Services namespace
- Consider moving Services namespace up one level (out of Models)

https://stackoverflow.com/questions/40614184/handling-exception-in-asp-net-core
https://stackoverflow.com/questions/56772155/asp-net-core-how-to-handle-error-pages-in-area
https://learn.microsoft.com/en-us/aspnet/core/fundamentals/logging/?view=aspnetcore-7.0
https://learn.microsoft.com/en-us/aspnet/core/fundamentals/error-handling?view=aspnetcore-7.0&viewFallbackFrom=aspnetcore-2.2#exception-handler-lambda
https://blog.kloud.com.au/2016/03/23/aspnet-core-tips-and-tricks-global-exception-handling/

---------------------------------------------------------------------------

Localization
- Add resource strings for the views' harcoded text.
- Once all static strings and display text have definitions in DST.Resources, 
  we need to set up the localizer service/support.
- Important:
    For display strings that are also used in route segments, be sure to send the default language value
    to the route from the view.
    Example: See the Sort.cs string properties. These are displayed, but also sent to the route dictionary.
    I can set up a test resource file with definitions for these in another language, and confirm
    that only the values from the default resource (english) are sent to the route.
- https://learn.microsoft.com/en-us/aspnet/core/fundamentals/localization/
- https://learn.microsoft.com/en-us/aspnet/core/fundamentals/localization/make-content-localizable?view=aspnetcore-7.0

---------------------------------------------------------------------------

[Misc]

Revise all id tags as camelCase

Users might disable JavaScript.
- Consider a message stating JavaScript must be enabled on this browser to run scripts.

Create powershell script(s) to remove/update the database, rebuild the migrations, etc.
- Creating migrations after modifying data
    1. Add-Migration <NAME>
    2. Update-Database
- Reverting migration
    1. Remove-Migration
- Reverting entire database
    1. Update-Database 0
    2. Remove-Migration, or manually delete the migration files.
- Run from PMC in visual studio
- Keep commented out when not running, then uncomment when ready.

Consider a builder for ILocalObserver, IObserverBuilder => LocalObserverBuilder.
- Takes DsoModel, GeolocationModel, and Algorithm
- Inject into TrackController.
- Save to session state
- Provide methods to set the Target (takes DsoModel), the Location (takes GeolocationModel), and the TimeKeeper (takes Algorithm)
- Provide methods/properties for dealing with the Season, Trajectory, etc.
OR, Consider a builder for storing at least the client date time.

Might need a routebuilder class for TrackPhase and TrackPeriod (TrackPhaseRouteBuilder and TrackPeriodRouteBuilder)
1. so that switching between the Track views, it remembers the client's last settings.
2. Because the route values are prone to user error
3. When navigating Phase and Period views, we should call different action methods, LoadPhase and LoadPeriod, 
    and also pass the TrackSummaryRoute values.
  These actions would load the previously saved routes, if any, for those views before redirecting to the appropriate action method with the routes.
  If there is no saved routes, we need to use the TrackSummaryRoute values passed in.
  The routes will be saved to session in the regular actions methods that build the viewmodels and return the views.
- We don't need a route builder for the summary view.
- Would need to add any properties not already included in the routes.

Query & Database update
- Repository types
  Consider new QueryOptions<T> classes to replace the LINQ queries in the unit of work methods.
  The reason is to view the resultant SQL query in SQL Server Profiler.
- Consider integer IDs for all tables.
- Revise all queries (SearchQueryOptions, QueryOptions, Repository) to avoid Linq to Objects
    so that they may be converted to valid SQL.
  See initial call to ToList in Repository.BuildQuery.
  See IUnitOfWork types (e.g., TrackController.GetDso calls ToList).
  We need to avoid calling ToList because it adds unnecessary overhead by selecting all the data 
  first, then again in Repository.List.
- Revise sort-filter form/model so that the posted values are the actual data values/ids (do not use ToKebabCase).
  Might need to revise TextValuePair to not call ToKebabCase.
  The TextValuePair.Value property should be the model's key value. (Consider updating the database with INT primary keys)
- Use ISortFilterBuilder dependency to access the values.
- Consider a new SQL Server Database Project to keep track of changes to the database 
    and to store scripts
    (DST.Database)
- https://stackoverflow.com/questions/194652/sql-server-regular-expressions-in-t-sql
- https://learn.microsoft.com/en-us/ef/core/querying/user-defined-function-mapping#mapping-a-method-to-a-custom-sql

Admin
Consider admin pages so that I may conveniently keep the Dso items up to date (?)
- Could also be used to update other site info, like home page announcements.