<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlgorithmERALong" xml:space="preserve">
    <value>Earth Rotation Angle</value>
    <comment>A timekeeping algorithm in stellar time</comment>
  </data>
  <data name="AlgorithmERAShort" xml:space="preserve">
    <value>ERA</value>
    <comment>Acronym for Earth Rotation Angle</comment>
  </data>
  <data name="AlgorithmGASTLong" xml:space="preserve">
    <value>Greenwich Apparent Sidereal Time</value>
    <comment>A timekeeping algorithm in sidereal time, with nutation</comment>
  </data>
  <data name="AlgorithmGASTShort" xml:space="preserve">
    <value>GAST</value>
    <comment>Acronym for Greenwich Apparent Sidereal Time</comment>
  </data>
  <data name="AlgorithmGMSTLong" xml:space="preserve">
    <value>Greenwich Mean Sidereal Time</value>
    <comment>A timekeeping algorithm in sidereal time</comment>
  </data>
  <data name="AlgorithmGMSTShort" xml:space="preserve">
    <value>GMST</value>
    <comment>Acronym for Greenwich Mean Sidereal Time</comment>
  </data>
  <data name="AltitudeApex" xml:space="preserve">
    <value>Apex</value>
    <comment>The peak altitude of a tracked object in an observer's sky</comment>
  </data>
  <data name="AltitudeRise" xml:space="preserve">
    <value>Rise</value>
    <comment>The rising altitude of a tracked object at an observer's horizon</comment>
  </data>
  <data name="AltitudeSet" xml:space="preserve">
    <value>Set</value>
    <comment>The setting altitude of a tracked object at an observer's horizon</comment>
  </data>
  <data name="ApparentMagnitudeDefault" xml:space="preserve">
    <value>Apparent Magnitude: none</value>
    <comment>The default text for a particular deep-sky object's apparent magnitude.</comment>
  </data>
  <data name="ApparentMagnitudeFormatDecimal" xml:space="preserve">
    <value>Apparent Magnitude: {0:0.0#}</value>
    <comment>Formats the apparent magnitude of a particular deep-sky object as a decimal value, up to two decimal places, or a single zero decimal digit if there is no fractional part.</comment>
  </data>
  <data name="DistanceFormatDecimalKly" xml:space="preserve">
    <value>{0:n} kly</value>
    <comment>Formats the distance of a deep-sky object as a floating-point value to two decimal places, with group separators, measured in kilolight-years.</comment>
  </data>
  <data name="LatitudeValidationMessage" xml:space="preserve">
    <value>Latitude must be in the range from -90.0 to 90.0</value>
    <comment>The validation message for a latitudinal coordinate value.</comment>
  </data>
  <data name="LongitudeValidationMessage" xml:space="preserve">
    <value>Longitude must be in the range from -180.0 to 180.0</value>
    <comment>The validation message for a longitudinal coordinate value.</comment>
  </data>
  <data name="RiseTimeDefault" xml:space="preserve">
    <value>Rise time not available</value>
    <comment>The default text for a particular deep-sky object's rising time.</comment>
  </data>
  <data name="RiseTimeFormatHoursFuture" xml:space="preserve">
    <value>{0:F0} hr</value>
    <comment>Formats the future rising time for a particular deep-sky object measured in hours, rounded to the nearest whole hour.</comment>
  </data>
  <data name="RiseTimeFormatHoursPast" xml:space="preserve">
    <value>{0:F0} hr ago</value>
    <comment>Formats the past rising time for a particular deep-sky object measured in hours, rounded to the nearest whole hour.</comment>
  </data>
  <data name="RiseTimeFormatMinutesFuture" xml:space="preserve">
    <value>{0} min</value>
    <comment>Formats the future rising time for a particular deep-sky object measured in integral minutes.</comment>
  </data>
  <data name="RiseTimeFormatMinutesPast" xml:space="preserve">
    <value>{0} min ago</value>
    <comment>Formats the past rising time for a particular deep-sky object measured in integral minutes.</comment>
  </data>
  <data name="RiseTimeFormatSecondsFuture" xml:space="preserve">
    <value>{0} sec</value>
    <comment>Formats the future rising time for a particular deep-sky object measured in integral seconds.</comment>
  </data>
  <data name="RiseTimeFormatSecondsPast" xml:space="preserve">
    <value>{0} sec ago</value>
    <comment>Formats the past rising time for a particular deep-sky object measured in integral seconds.</comment>
  </data>
  <data name="SortFieldBrightness" xml:space="preserve">
    <value>Brightness</value>
    <comment>The display text for sorting by brightness.</comment>
  </data>
  <data name="SortFieldConstellation" xml:space="preserve">
    <value>Constellation</value>
    <comment>The display text for sorting by constellation.</comment>
  </data>
  <data name="SortFieldDistance" xml:space="preserve">
    <value>Distance</value>
    <comment>The display text for sorting by distance.</comment>
  </data>
  <data name="SortFieldId" xml:space="preserve">
    <value>Id</value>
    <comment>The display text for sorting by Id.</comment>
  </data>
  <data name="SortFieldName" xml:space="preserve">
    <value>Name</value>
    <comment>The display text for sorting by name.</comment>
  </data>
  <data name="SortFieldRiseTime" xml:space="preserve">
    <value>Rise Time</value>
    <comment>The display text for sorting by rise time.</comment>
  </data>
  <data name="SortFieldType" xml:space="preserve">
    <value>Type</value>
    <comment>The display text for sorting by type.</comment>
  </data>
  <data name="TimeScaleSidereal" xml:space="preserve">
    <value>Sidereal Time</value>
    <comment>A 1:1.0027379093507951 timescale ratio of mean solar time</comment>
  </data>
  <data name="TimeScaleSolar" xml:space="preserve">
    <value>Mean Solar Time</value>
    <comment>A 1:1 timescale ratio of a 24-hour day</comment>
  </data>
  <data name="TimeScaleStellar" xml:space="preserve">
    <value>Stellar Time</value>
    <comment>A 1:1.0027378119113546 timescale ratio of mean solar time</comment>
  </data>
  <data name="TimeUnitDays" xml:space="preserve">
    <value>Days</value>
    <comment>A unit of time</comment>
  </data>
  <data name="TimeUnitHours" xml:space="preserve">
    <value>Hours</value>
    <comment>A unit of time</comment>
  </data>
  <data name="TimeUnitMinutes" xml:space="preserve">
    <value>Minutes</value>
    <comment>A unit of time</comment>
  </data>
  <data name="TimeUnitMonths" xml:space="preserve">
    <value>Months</value>
    <comment>A unit of time</comment>
  </data>
  <data name="TimeUnitSeconds" xml:space="preserve">
    <value>Seconds</value>
    <comment>A unit of time</comment>
  </data>
  <data name="TimeUnitWeeks" xml:space="preserve">
    <value>Weeks</value>
    <comment>A unit of time</comment>
  </data>
  <data name="TimeUnitYears" xml:space="preserve">
    <value>Years</value>
    <comment>A unit of time</comment>
  </data>
  <data name="TrajectoryCircumpolar" xml:space="preserve">
    <value>Circumpolar</value>
    <comment>A type of diurnal arc in which a tracked object is always above an observer's horizon</comment>
  </data>
  <data name="TrajectoryCircumpolarOffset" xml:space="preserve">
    <value>Circumpolar Offset</value>
    <comment>A type of diurnal arc in which a tracked object is always above an observer's horizon, where the observer is not located at either of the geographic poles</comment>
  </data>
  <data name="TrajectoryNeverRise" xml:space="preserve">
    <value>Never Rise</value>
    <comment>A type of diurnal arc in which a tracked object never rises above an observer's horizon</comment>
  </data>
  <data name="TrajectoryRiseAndSet" xml:space="preserve">
    <value>Rise and Set</value>
    <comment>A type of diurnal arc in which a tracked object periodically rises from and sets at an observer's horizon</comment>
  </data>
</root>